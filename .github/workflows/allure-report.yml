name: Run Edge Tests and Publish Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

env:
  PYTHON_VERSION: '3.10'
  ALLURE_VERSION: '2.35.1'    # change if you prefer another valid release

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Upgrade pip & Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path 'requirements.txt') {
            python -m pip install -r requirements.txt
          } else {
            Write-Host "requirements.txt not found, skipping"
          }
          python -m pip install allure-pytest

      - name: Create directories
        shell: pwsh
        run: |
          if (-not (Test-Path logs)) { New-Item -ItemType Directory -Path logs | Out-Null }
          if (-not (Test-Path allure-results)) { New-Item -ItemType Directory -Path allure-results | Out-Null }
          if (-not (Test-Path allure-report)) { New-Item -ItemType Directory -Path allure-report | Out-Null }

      - name: Run Pytest with Allure
        shell: pwsh
        run: |
          # Run pytest; fail the step if tests fail (exit code non-zero)
          python -m pytest --alluredir=allure-results --maxfail=1 --disable-warnings -v

      - name: Install Allure CLI (Windows) and export envs
        shell: pwsh
        run: |
          $version = "${{ env.ALLURE_VERSION }}"
          Write-Host "Requested Allure version: $version"

          $workspace = "${{ github.workspace }}"
          $destRoot = Join-Path $workspace 'allure'
          $zip = Join-Path $env:TEMP "allure-$version.zip"
          $url = "https://github.com/allure-framework/allure2/releases/download/$version/allure-$version.zip"
          Write-Host "Downloading Allure from: $url"

          try {
            Invoke-WebRequest -Uri $url -OutFile $zip -UseBasicParsing -ErrorAction Stop
          } catch {
            Write-Error "Failed to download Allure. Check that version $version exists. Exception: $_"
            exit 1
          }

          if (-not (Test-Path $zip)) {
            Write-Error "Allure zip not found at $zip"
            exit 1
          }

          $size = (Get-Item $zip).Length
          Write-Host "Downloaded file size: $size bytes"
          if ($size -lt 1000) {
            Write-Error "Downloaded Allure archive looks too small. Aborting."
            exit 1
          }

          if (Test-Path $destRoot) { Remove-Item -Recurse -Force $destRoot }
          New-Item -ItemType Directory -Path $destRoot | Out-Null

          Write-Host "Extracting Allure to $destRoot..."
          Expand-Archive -LiteralPath $zip -DestinationPath $destRoot -Force

          $firstFolder = Get-ChildItem -Directory $destRoot | Select-Object -First 1
          if ($null -eq $firstFolder) {
            Write-Error "Could not find extracted Allure folder under $destRoot"
            exit 1
          }
          $allureHome = $firstFolder.FullName
          $bin = Join-Path $allureHome 'bin'

          if (-not (Test-Path $bin)) {
            Write-Error "Could not find Allure bin directory at $bin"
            exit 1
          }

          Write-Host "Allure home: $allureHome"
          Write-Host "Allure bin: $bin"

          # Persist variables for next steps
          Add-Content -Path $env:GITHUB_ENV -Value "ALLURE_HOME=$allureHome"
          Add-Content -Path $env:GITHUB_ENV -Value "PATH=$bin;$env:PATH"

      - name: Verify Allure CLI
        shell: pwsh
        run: |
          Write-Host "ALLURE_HOME = $env:ALLURE_HOME"
          Write-Host "PATH = $env:PATH"
          & "$env:ALLURE_HOME\bin\allure.bat" --version

      - name: Generate Allure Report
        shell: pwsh
        run: |
          if (-not (Test-Path "allure-results")) {
            Write-Warning "allure-results folder not found. Skipping report generation."
            exit 0
          }
          & "$env:ALLURE_HOME\bin\allure.bat" generate allure-results -o allure-report --clean
          Write-Host "Allure report generated at: $(Resolve-Path allure-report)"

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages
